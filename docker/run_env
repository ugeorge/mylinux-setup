#!/usr/bin/env bash

image_name="$(id -un)/env"
instance_name="$(id -un)_env"
docker_file="Dockerfile-env"

XAUTH=/tmp/.docker.xauth

# Find out where user's X11 authority file on the host is
HOST_XAUTH=''
if type -t xauth >/dev/null; then
    HOST_XAUTH=$(xauth info | awk '/Authority file/ {print $3}')
fi
# The following assignment is a safe-guard in case xauth fails. It does not make
# X11 work, but at least the docker run will not fail and we can run it without
# support for X11 clients inside.
HOST_XAUTH=${HOST_XAUTH:-${XAUTH}}

MY_HOME=$(getent passwd $(id -nu) | awk -F: '{print $6}')

docker run -u $(id -u):$(id -g) --name "${instance_name}" --rm -ti --net=host -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -v $MY_HOME:$MY_HOME -v /repo/"$(id -un)"/:/repo/"$(id -un)"/ -e DISPLAY=$DISPLAY -e QT_X11_NO_MITSHM=1 -v $HOST_XAUTH:$XAUTH:ro -e XAUTHORITY=$XAUTH -w $MY_HOME "${image_name}" bash

